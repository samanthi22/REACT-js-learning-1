{"changed":true,"filter":false,"title":"e.js","tooltip":"/e.js","value":"// function declared at the very bottom of file available at top\n// hoisting\n\n// cannot change const\n// cannot be hoisting if const\n// defines as a function can be changed\n\n// const are not available for use until declared.\n// anoynomous function without a name is const then not created.\n\nconst thisIsAConst = 50\nthisIsAConst++ // error!\n\nthisIsAlsoAVariable = 'hello'\n\n\nconst constObj = {}\nconstObj.a = 'a'\n\nlet thisIsALet = 51\nthisIsALet = 50\n\nlet thisIsALet = 51; // errors!\n\n// let not declared at all, not hoisted. \n// does not assign a value\n// undefined variable\n// type error\n// var then exists but undefined\n\n// any function definitions just get saved in memory\n\nvar thisIsAVar = 50\n// declared but not initialized until later\nthisIsAVar = 51\nvar thisIsAVar = 'new value!'\n\n// creates a variable \n// declare variable without let or const\n// it creates is globally\nthisIsHoisted()\n// scope\n\n// javascript feature?\n\n// E6 supports const and let\n\nfunction thisIsHoisted() {\n    console.log('this is a function declared at the bottom of the file')\n}\n\n// final topic of the day\n\n// var y\n// is exact thing as window.y\n\nvar thisIsNotHoisted = function() {\n    console.log('should this be hoisted?')\n}\n\n// semicolons optional\n\n// lexical scoping (var) when they are declared until function ends\n// block scoping const let until the next } is reached\n// functions are hoisted but not lexically-scoped\n// but how/why?\n\n// closure\n\n\narr[2]()\n\n\n","undoManager":{"mark":10,"position":12,"stack":[[{"start":{"row":68,"column":2},"end":{"row":68,"column":3},"action":"remove","lines":[" "],"id":2}],[{"start":{"row":68,"column":1},"end":{"row":68,"column":2},"action":"remove","lines":["/"],"id":3},{"start":{"row":68,"column":0},"end":{"row":68,"column":1},"action":"remove","lines":["/"]}],[{"start":{"row":68,"column":0},"end":{"row":69,"column":0},"action":"insert","lines":["",""],"id":4}],[{"start":{"row":69,"column":0},"end":{"row":70,"column":0},"action":"insert","lines":["",""],"id":5}],[{"start":{"row":70,"column":0},"end":{"row":70,"column":1},"action":"insert","lines":["a"],"id":6}],[{"start":{"row":70,"column":1},"end":{"row":70,"column":2},"action":"insert","lines":["r"],"id":7}],[{"start":{"row":70,"column":2},"end":{"row":70,"column":3},"action":"insert","lines":["r"],"id":8}],[{"start":{"row":70,"column":3},"end":{"row":70,"column":5},"action":"insert","lines":["[]"],"id":9}],[{"start":{"row":70,"column":4},"end":{"row":70,"column":5},"action":"insert","lines":["2"],"id":10}],[{"start":{"row":70,"column":6},"end":{"row":70,"column":8},"action":"insert","lines":["()"],"id":11}],[{"start":{"row":70,"column":8},"end":{"row":71,"column":0},"action":"insert","lines":["",""],"id":12}],[{"start":{"row":22,"column":0},"end":{"row":22,"column":1},"action":"insert","lines":["/"],"id":13},{"start":{"row":22,"column":1},"end":{"row":22,"column":2},"action":"insert","lines":["/"]},{"start":{"row":22,"column":2},"end":{"row":22,"column":3},"action":"insert","lines":[" "]}],[{"start":{"row":22,"column":0},"end":{"row":22,"column":3},"action":"remove","lines":["// "],"id":14,"ignore":true},{"start":{"row":70,"column":8},"end":{"row":72,"column":0},"action":"insert","lines":["","",""]}]]},"ace":{"folds":[],"scrolltop":962.5,"scrollleft":0,"selection":{"start":{"row":22,"column":0},"end":{"row":22,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":59,"state":"no_regex","mode":"ace/mode/javascript"}},"timestamp":1539605704355}